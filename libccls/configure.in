m4_define([libccls_major_version], [0])
m4_define([libccls_minor_version], [8])
m4_define([libccls_micro_version], [2])
m4_define([libccls_interface_age], [2])

m4_define([libccls_lt_current], [8])
m4_define([libccls_lt_revision], [2])
m4_define([libccls_lt_age], [8])

AC_INIT(configure.in)

LIBCCLS_MAJOR_VERSION=0
LIBCCLS_MINOR_VERSION=8
LIBCCLS_PATCH_LEVEL=2
  
VERSION=$LIBCCLS_MAJOR_VERSION.$LIBCCLS_MINOR_VERSION.$LIBCCLS_PATCH_LEVEL

AM_INIT_AUTOMAKE(libccls, $VERSION)

AC_PROG_CC
AM_PROG_LIBTOOL
AC_PROG_MAKE_SET

AC_LANG_C

AC_CHECK_LIB(sqlite3, sqlite3_open,,AC_MSG_ERROR([please install sqlite3]))
AC_CHECK_HEADER(sqlite3.h,,AC_MSG_ERROR([please install sqlite3 headers]))
AM_PATH_GLIB_2_0([2.4.0],,AC_MSG_ERROR([please install glib2]))
AC_CHECK_LIB(ssl, SSL_new,,AC_MSG_ERROR([please install openssl]))
AC_CHECK_HEADER(openssl/ssl.h,,AC_MSG_ERROR([please install openssl headers]))
AC_HEADER_TIME

PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.4.0])

AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

LT_CURRENT=libccls_lt_current
LT_REVISION=libccls_lt_revision
LT_AGE=libccls_lt_age

AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AC_SUBST(VERSION)

AC_OUTPUT([
config.h
Makefile
src/Makefile
])
